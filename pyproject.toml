# pyproject.toml
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentic-framework"
version = "1.0.0"
description = "Multi-agent workflow orchestration system using FastAPI and MCP"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
keywords = ["agents", "workflow", "automation", "mcp", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "aiohttp>=3.9.0",
    "asyncio>=3.4.3",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
    "fastmcp>=0.2.0",
    "openai>=1.3.0",
    "pandas>=2.1.0",
    "sqlite3",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/agentic-framework"
Documentation = "https://agentic-framework.readthedocs.io"
Repository = "https://github.com/yourusername/agentic-framework.git"
Issues = "https://github.com/yourusername/agentic-framework/issues"

[project.scripts]
agentic = "agentic.cli:main"
agentic-server = "agentic.app.main:main"

[project.entry-points."agentic.agents"]
web_search = "agentic.agents.local.web_search_server:mcp"
tabulator = "agentic.agents.local.tabulator_server:mcp"
nlp_summarizer = "agentic.agents.local.nlp_summarizer_server:mcp"
calculator = "agentic.agents.local.calculator_server:mcp"

[tool.hatch.build.targets.wheel]
packages = ["agentic"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

